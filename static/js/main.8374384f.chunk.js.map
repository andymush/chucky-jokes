{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","joke","state","setState","useEffect","fetchData","a","result","axios","get","console","data","value","log","className","ButtonToolbar","onClick","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAkDeA,MA3Cf,WAAgB,IAAD,EACWC,mBAAS,CAC/BC,KAAK,KAFM,mBACNC,EADM,KACAC,EADA,KAKbC,qBAAW,WACTC,MACA,IAEJ,IAAMA,EAAS,uCAAE,4BAAAC,EAAA,6DACTC,EAASC,IAAMC,IAAI,2CADV,KAEfC,QAFe,SAEIH,EAFJ,0BAEYI,KAAKC,MAFjB,KAEPC,IAFO,qBAGfV,EAHe,6BAIVD,GAJU,kBAKAK,EALA,oBAKQI,KAAKC,MALb,MAKbX,KALa,+FAAF,qDAcb,OACE,sBAAKa,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,SAAf,UACE,oBAAIA,UAAU,QAAd,+BACA,4BAGA,cAACC,EAAA,EAAD,UACE,wBAAQD,UAAU,kBAAkBE,QAdhD,WACEC,OAAOC,SAASC,QAAO,IAab,iCAEJ,uBAEF,6BAAKjB,EAAMD,WC/BFmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8374384f.chunk.js","sourcesContent":["\nimport axios from 'axios';\nimport './App.css';\nimport React, { useEffect,useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport { ButtonToolbar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction App() {\n  const [state,setState] =useState({\n    joke:''\n  })\n\n  useEffect( () => {\n    fetchData();\n  },[]);\n\nconst fetchData =async()=> {\n  const result = axios.get('https://api.chucknorris.io/jokes/random');\n  console.log((await result).data.value);\n  setState({\n    ...state,\n    joke: (await result).data.value\n  })\n}\n\nfunction refreshPage() {\n  window.location.reload(false);\n}    \n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1 className=\"title\">Chuck Norris Joke</h1>\n          <br></br>\n        </div>\n      </div>\n          <ButtonToolbar>\n            <button className=\"btn btn-primary\" onClick={refreshPage}>Get a random Joke</button>\n          </ButtonToolbar>\n        <br>\n        </br>\n      <h4>{state.joke}</h4>\n      \n      </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}